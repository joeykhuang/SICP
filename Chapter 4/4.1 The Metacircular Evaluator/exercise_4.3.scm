(load "Chapter 4/4.1 The Metacircular Evaluator/eval-apply.scm")
(load "Chapter 2/2.4 Multiple Representations for Abstract Data/data_directed_programming.scm")
(define (eval exp env)
    (cond ((self-evaluating? exp) exp)
          ((variable? exp) (lookup-variable-value exp env))
          ((get-syntax (type-tag exp)) ((get-syntax (type-tag exp)) exp env))
          ((application? exp)
           (apply (eval (operator exp) env)
                  (list-of-values (operands exp) env)))
          (else
            (error "Unknown expression type: EVAL" exp))))
 
(define syntax-table (make-table))
(define (get-syntax proc-name) ((syntax-table 'lookup-proc ) 'meta proc-name))
(define (put-syntax! proc-name proc) ((syntax-table 'insert-proc! ) 'meta proc-name proc))
 
(define (install-syntax)
  (put-syntax! 'quote eval-quoted)
  (put-syntax! 'define eval-definition)
  (put-syntax! 'set! eval-assignment)
  (put-syntax! 'if eval-if)
  (put-syntax! 'lambda eval-lambda)
  (put-syntax! 'begin eval-begin)
  (put-syntax! 'cond eval-cond)
  'done )

(install-syntax)
