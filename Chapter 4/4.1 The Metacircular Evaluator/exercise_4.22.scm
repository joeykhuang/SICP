(load "Chapter 4/4.1 The Metacircular Evaluator/syntactic-analysis.scm")
(define (analyze exp)
    (cond ((self-evaluating? exp) (analyze-self-evaluating exp))
          ((quoted? exp) (analyze-quoted exp))
          ((variable? exp) (analyze-variable exp))
          ((assignment? exp) (analyze-assignment exp))
          ((definition? exp) (analyze-definition exp))
          ((if? exp) (analyze-if exp))
          ((let? exp) (analyze-let exp))
          ((lambda? exp) (analyze-lambda exp))
          ((begin? exp) (analyze-sequence (begin-actions exp)))
          ((cond? exp) (analyze (cond->if exp)))
          ((application? exp) (analyze-application exp))
          (else (error "Unknown expression type: ANALYZE" exp))))

(define (analyze-let exp)
    (let ((lvars (let-vars (let-clauses exp)))
          (lexps (let-exps (let-clauses exp))))
        (let ((lproc (append (list (make-lambda lvars lexps)) 
                             (let-exps (let-clauses exp)))))
            (lambda (env)
                (analyze lproc env))))