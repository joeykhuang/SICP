(define (expt-iter b count product)
    (if (= count 0)
        b
        (expt-iter (* b b) (- count 1) (* product b))))
(define (calc-expt b n)
    (if (is-even? n)
        (expt-iter b (/ n 2) 1)
        (* (expt-iter b (/ (- n 1) 2) 1) b)))
(define (is-even? n)
    (= (remainder n 2) 0))