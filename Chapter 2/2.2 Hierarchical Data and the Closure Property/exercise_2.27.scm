(load "Chapter 2/2.2 Hierarchical Data and the Closure Property/exercise_2.18scm")
(load "Chapter 2/2.2 Hierarchical Data and the Closure Property/map-list")
(define x (list (list 1 2) (list 3 4)))
(define (deep-reverse-iter x aplist)
    (define (reverse items)
        (define (reverse-append items append-list)
            (if (null? items)
                append-list
                (reverse-append (cdr items) (append (list (car items)) append-list))))
        (reverse-append items (list )))
    (if (not (pair? (car x)))
        (deep-reverse-iter (cdr x) (append aplist (car x)))
        (deep-reverse-iter (cdr x) (append aplist (reverse (car x)))))
    (if (not (pair? (car x)))
        (append aplist (car x))
        (append aplist (reverse (car x)))))
(define (deep-reverse x)
    (deep-reverse-iter x (list )))

(define (deep-reverse x)
    (reverse (map reverse x)))