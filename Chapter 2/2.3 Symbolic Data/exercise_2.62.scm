(load "Chapter 2/2.3 Symbolic Data/set-ordered.scm")
(define (adjoin-set set1 set2)
    (cond ((null? set1) set2)
          ((null? set2) set1)
          (else (let ((x1 (car set1))
                      (x2 (car set2)))
                (cond ((= x1 x2) (adjoin-set (cdr set1) set2))
                      ((< x1 x2) (cons x1 (adjoin-set (cdr set1) set2)))
                      ((< x2 x1) (cons x2 (adjoin-set set1 (cdr set2)))))))))